SVG.extend(SVG.Element,{draggable:function(constraint){var start,drag,end,startEvent,dragEvent,endEvent,element=this,parent=this.parent._parent(SVG.Nested)||this._parent(SVG.Doc),isTouch="ontouchstart"in window||navigator.msMaxTouchPoints&&!navigator.msPointerEnabled,isiOS=navigator.userAgent.match(/(ip(hone|od|ad))/i)?true:false;if(typeof this.fixed=="function")this.fixed();constraint=constraint||{};if(isTouch){startEvent="touchstart";dragEvent="touchmove";endEvent="touchend"}else{startEvent="mousedown";dragEvent="mousemove";endEvent="mouseup"}start=function(event){event=event||window.event;var box;if(element.beforedrag)element.beforedrag(event);box=element.bbox();if(element instanceof SVG.G){box.x=element.trans.x;box.y=element.trans.y}else if(element instanceof SVG.Nested){box={x:element.x(),y:element.y(),width:element.attr("width"),height:element.attr("height")}}element.startEvent=event;element.startPosition={x:box.x,y:box.y,width:box.width,height:box.height,zoom:parent.viewbox().zoom,rotation:element.transform("rotation")*Math.PI/180};SVG.on(window,dragEvent,drag);SVG.on(window,endEvent,end);if(element.dragstart)element.dragstart({x:0,y:0,zoom:element.startPosition.zoom},event);event.preventDefault?event.preventDefault():event.returnValue=false};drag=function(event){event=event||window.event;if(element.startEvent){var x,y,rotation=element.startPosition.rotation,width=element.startPosition.width,height=element.startPosition.height,delta;if(isTouch){if(isiOS){delta={x:event.pageX-element.startEvent.pageX,y:event.pageY-element.startEvent.pageY,zoom:element.startPosition.zoom}}else{delta={x:event.changedTouches[0].pageX-element.startEvent.changedTouches[0].pageX,y:event.changedTouches[0].pageY-element.startEvent.changedTouches[0].pageY,zoom:element.startPosition.zoom}}}else{delta={x:event.pageX-element.startEvent.pageX,y:event.pageY-element.startEvent.pageY,zoom:element.startPosition.zoom}}x=element.startPosition.x+(delta.x*Math.cos(rotation)+delta.y*Math.sin(rotation))/element.startPosition.zoom;y=element.startPosition.y+(delta.y*Math.cos(rotation)+delta.x*Math.sin(-rotation))/element.startPosition.zoom;if(element._offset){x-=element._offset.x;y-=element._offset.y}if(constraint.minX!=null&&x<constraint.minX)x=constraint.minX;else if(constraint.maxX!=null&&x>constraint.maxX-width)x=constraint.maxX-width;if(constraint.minY!=null&&y<constraint.minY)y=constraint.minY;else if(constraint.maxY!=null&&y>constraint.maxY-height)y=constraint.maxY-height;element.move(x,y);if(element.dragmove)element.dragmove(delta,event)}};end=function(event){event=event||window.event;var delta;if(isTouch){if(isiOS){delta={x:event.pageX-element.startEvent.pageX,y:event.pageY-element.startEvent.pageY,zoom:element.startPosition.zoom}}else{delta={x:event.changedTouches[0].pageX-element.startEvent.changedTouches[0].pageX,y:event.changedTouches[0].pageY-element.startEvent.changedTouches[0].pageY,zoom:element.startPosition.zoom}}}else{delta={x:event.pageX-element.startEvent.pageX,y:event.pageY-element.startEvent.pageY,zoom:element.startPosition.zoom}}element.startEvent=null;element.startPosition=null;SVG.off(window,dragEvent,drag);SVG.off(window,endEvent,end);if(element.dragend)element.dragend(delta,event)};element.on(startEvent,start);element.fixed=function(){element.off(startEvent,start);SVG.off(window,dragEvent,drag);SVG.off(window,endEvent,end);start=drag=end=null;return element};return this}});